<UserControl x:Class="Sasha_Project.Views.SettingsViews.SettingsGroupsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Sasha_Project.Views.SettingsViews"
        xmlns:viewmodels="clr-namespace:Sasha_Project.ViewModels.SettingsPages" xmlns:i="http://schemas.microsoft.com/xaml/behaviors" xmlns:converters="clr-namespace:Sasha_Project.Views.Converters"
             mc:Ignorable="d">

    <UserControl.DataContext>
        <viewmodels:SettingsGroupsViewModel/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <converters:ChangeToSaveTextConverter x:Key="ButtonClickText"/>
        <converters:NewPrepodAddItemVisible x:Key="Visible"/>

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource MainBlueColorMiddle}" 
              CornerRadius="5 5 0 0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource MainBlueColorMiddle}" />
                <Border Grid.Column="1" CornerRadius="0 0 5 0" Margin="1, 1, 1, 1" BorderBrush="{StaticResource MainBlueGentleColor}" Name="ButtonBorder"
              Background="{StaticResource MainBlueColorMiddle}" />

                <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="{StaticResource MainBlueGentleColor}"
            VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource MainBlueColorBlack}"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource MainBlueColorBlack}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="{StaticResource MainBlueGentleColor}"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource MainBlueColorMiddle}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource MainBlueColorMiddle}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource MainBlueColorMiddle}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource MainBlueColorMiddle}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="{StaticResource MainBlueColorBlack}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="{StaticResource FontColor}"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Visibility="Hidden" Background="{StaticResource MainBlueGentleColor}"
                                 HorizontalAlignment="Left" VerticalAlignment="Center" Height="30" FontSize="24"
                                 Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox">
                                        <Border Name="PART_ContentHost" Focusable="False"/>
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="{StaticResource MainBlueGentleColor}" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource MainBlueColorMiddle}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="500"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource MainBlueColorMiddle}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Border Padding="50">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="0"/>
                    <RowDefinition Height="90*"/>
                    <RowDefinition Height="5*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40*"/>
                    <ColumnDefinition Width="60*"/>
                </Grid.ColumnDefinitions>

                <DataGrid MinWidth="200" SelectedIndex="0" CanUserAddRows="False" ColumnWidth="*" 
                          Grid.Row="1" Grid.Column="0" AutoGenerateColumns="False"
                          ItemsSource="{Binding Groups}" SelectedItem="{Binding SelectedItem}" 
                          IsSynchronizedWithCurrentItem="False" x:Name="Table"
                          BorderBrush="{x:Null}" SelectionUnit="FullRow" Padding="1,1,1,1" IsReadOnly="True"
                          FontSize="20" FontFamily="Calibri" Foreground="White" 
                          HorizontalAlignment="Center" Background="{x:Null}" 
                          SelectionMode="Single" 
                          CanUserDeleteRows="False" CanUserResizeRows="False" 
                          RowDetailsVisibilityMode="Collapsed" AreRowDetailsFrozen="True" 
                          VerticalScrollBarVisibility="Hidden" HeadersVisibility="Column"
                          HorizontalScrollBarVisibility="Hidden" MinRowHeight="30" GridLinesVisibility="Horizontal" 
                          HorizontalGridLinesBrush="White" VerticalAlignment="Center">
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}" >
                            <Setter Property="Background" Value="#FF0C2A4C"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="FontSize" Value="30"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>

                    <DataGrid.Columns>
                        <DataGridTextColumn Width="*" Header="Группы" Binding="{Binding Path=Title}"/>
                    </DataGrid.Columns>

                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}" >
                            <Setter Property="Background" Value="#FF0C2A4C"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="BorderBrush" Value="White"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="FontSize" Value="24"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource MainBlueGentleColor}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>

                    <DataGrid.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="Padding" Value="5 5"/>
                                    <Setter Property="BorderBrush" Value="White"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Background" Value="{StaticResource MainBlueMiddleGentleColor}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>

                </DataGrid>

                <Border Grid.Row="2" Style="{StaticResource BorderAdd}" Height="30">
                    <TextBlock FontSize="16" Foreground="{StaticResource FontColor}" 
                                           HorizontalAlignment="Center" VerticalAlignment="Center" Text="Добавить"/>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <i:InvokeCommandAction 
                                        Command="{Binding AddGroup}"
                                        />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Border>

                <StackPanel Margin="30 0" Grid.Row="1" Grid.Column="1">
                    <TextBlock FontSize="26" Foreground="{StaticResource FontColor}" Text="Группа:" HorizontalAlignment="Center"/>
                    <!--<Grid  Margin="0,10,0,0" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="70"/>
                        </Grid.ColumnDefinitions>
                        <TextBox FontSize="22" x:Name="TextBoxRoom" 
                            Text="{Binding SelectedItem.Title, UpdateSourceTrigger=PropertyChanged}" 
                            UndoLimit="20" SelectionBrush="{DynamicResource MainBlueGentleColor}" 
                            Background="{DynamicResource MainBlueGentleColor}" 
                            BorderBrush="{DynamicResource FontColor}" Foreground="{DynamicResource FontColor}" Height="30"/>

                        <TextBox TextAlignment="Center" Margin="10 0 0 0" Grid.Column="1" FontSize="22"
                            Text="{Binding SelectedItem.LastName, UpdateSourceTrigger=PropertyChanged}" 
                            UndoLimit="20" SelectionBrush="{DynamicResource MainBlueGentleColor}" Background="{DynamicResource MainBlueGentleColor}" 
                            BorderBrush="{DynamicResource FontColor}" Foreground="{DynamicResource FontColor}" Height="30"/>
                    </Grid>-->

                    <Grid Margin="0 20">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" Height="30" Style="{StaticResource BorderAdd}">
                            <TextBlock FontSize="16" Foreground="{StaticResource FontColor}" 
                                           HorizontalAlignment="Center" VerticalAlignment="Center" Text="Удалить"/>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction 
                                                Command="{Binding DeleteGroup}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Border>

                        <Border Grid.Column="1" Style="{StaticResource BorderAdd}" Height="30">
                            <TextBlock FontSize="16" Foreground="{StaticResource FontColor}" 
                                       HorizontalAlignment="Center" VerticalAlignment="Center" 
                                       Text="{Binding SelectedItem.ID, Converter={StaticResource ButtonClickText}}"/>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction 
                                        Command="{Binding PutGroup}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Border>
                    </Grid>

                    <!--<StackPanel Visibility="{Binding SelectedItem.ID, Converter={StaticResource Visible}}">
                        <TextBlock Margin="0 20 0 0" Foreground="{StaticResource FontColor}" HorizontalAlignment="Center" 
                               VerticalAlignment="Center" FontSize="22" Text="Список предметов:"/>
                        <ListView  HorizontalContentAlignment="Stretch" Background="{x:Null}" 
                                   ItemsSource="{Binding TeacherLessons}" 
                                   BorderBrush="{x:Null}" x:Name="ListTeacherLessons">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Width="Auto" FontSize="18" TextWrapping="Wrap" Foreground="{StaticResource FontColor}" Text="{Binding Lesson}"/>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>

                        <Border Grid.Column="1" Style="{StaticResource BorderAdd}" Height="30">
                            <TextBlock FontSize="16" Foreground="{StaticResource FontColor}" 
                                       HorizontalAlignment="Center" VerticalAlignment="Center" 
                                       Text="Удалить предмет"/>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction 
                                        Command="{Binding DeleteLesson}"
                                        CommandParameter="{Binding ElementName=ListTeacherLessons, Path=SelectedItem}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Border>

                        <ComboBox Margin="0 10" Name="LessonsComboBox" ItemsSource="{Binding Lessons}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock FontSize="16" Text="{Binding Lesson}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <Border Grid.Column="1" Style="{StaticResource BorderAdd}" Height="30">
                            <TextBlock FontSize="16" Foreground="{StaticResource FontColor}" 
                                       HorizontalAlignment="Center" VerticalAlignment="Center" 
                                       Text="Добавить предмет"/>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction 
                                        Command="{Binding AddLesson}"
                                        CommandParameter="{Binding ElementName=LessonsComboBox, Path=SelectedItem}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Border>
                    </StackPanel>-->
                </StackPanel>
            </Grid>
        </Border>
    </Grid>

</UserControl>
